<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//cria os butt√µes
var i;
var middlex = room_width/2;
maxButtons = 3;
selectedButton = 1;
lastSButton = 1;




Button1 = instance_create(0,0,Button);
Button2 = instance_create(0,0,Button);
Button3 = instance_create(0,0,Button);




Buttons[1] = Button1;
Buttons[2] = Button2;
Buttons[3] = Button3;





with(Buttons[1]) {
    selected = true;
    x = middlex-sprite_width/2;
    y = 180;
    text = "Play";
}

with(Buttons[2]) {
    x = middlex-sprite_width/2;
    y = 260;
    text = "Test";
}

with(Buttons[3]) {
    x = middlex-sprite_width/2;
    y = 260 + 80; //N QUERO FAZER CONTAS DNT JUGE
    text = "Quit";
}













</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>up = (keyboard_check_pressed(vk_up));
down = (keyboard_check_pressed(vk_down));
enter = (keyboard_check_pressed(vk_enter));

if(up) {
    if(selectedButton == 1) {
        selectedButton = maxButtons;
    } else {selectedButton -= 1;}
}

if(down) {
    if(selectedButton == maxButtons) {
        selectedButton = 1;
    } else {selectedButton += 1;}
}

with(Buttons[lastSButton]) {
    selected = false;
}

with(Buttons[selectedButton]) {
    selected = true;
}
lastSButton = selectedButton;

if(enter) {
    if(selectedButton == 1) {
        room_goto(rm_charSel);
    }
    if(selectedButton == 2) {
        
    }
    if(selectedButton == 3) {
        game_end();
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
